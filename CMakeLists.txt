PROJECT (MOONSHINE C)

SET(SRC "${MOONSHINE_SOURCE_DIR}")
SET(BIN "${MOONSHINE_BINARY_DIR}") 

SET(CMAKE_ALLOW_LOOSE_LOOP_CONSTRUCTS 1)
SET(CMAKE_MODULE_PATH "${SRC}/cmake")


ADD_EXECUTABLE (moonshine term.c packages.h moon.c buffer.c entry.c
	modEntry.c modBuffer.c modapp.c util.c main.c)

FIND_PACKAGE(Lua REQUIRED)
FIND_PACKAGE(Slang REQUIRED)
FIND_PACKAGE(GLib REQUIRED)
FIND_PACKAGE(GNet REQUIRED)

IF (NOT LUA_FOUND)
	MESSAGE(STATUS "Poop, no lua.")
ENDIF ()

INCLUDE_DIRECTORIES(BEFORE ${SLANG_INCLUDE_DIR} ${LUA_INCLUDE_DIR} ${BIN}
	${GLIB_INCLUDE_DIRS} ${GNET_INCLUDE_DIRS})	

TARGET_LINK_LIBRARIES(moonshine ${GLIB_LIBRARY} ${GNET_LIBRARY} ${SLANG_LIBRARY}
	${LUA_LIBRARY})

## Now we add these the the flags passed to the C compiler.
ADD_DEFINITIONS("-std=gnu99 -Werror -Wall -Winline -I${BIN}")
ADD_DEFINITIONS("${GLIB_DEFINITIONS} ${GNET_DEFINITIONS}")

#CONFIGURE_FILE(${SRC}/docs/Doxyfile.in
#	${BIN}/docs/Doxyfile
#	@ONLY IMMEDIATE)

FILE(GLOB PACKAGES ${SRC}/lua/*.lua)
ADD_CUSTOM_COMMAND(OUTPUT ${BIN}/packages.h
	COMMAND perl ${SRC}/cmake/embed-packages.pl 
	${PACKAGES} > ${BIN}/packages.h
	MAIN_DEPENDENCY ${SRC}/cmake/embed-packages.pl DEPENDS ${PACKAGES}
	WORKING_DIRECTORY ${SRC})

SET_SOURCE_FILES_PROPERTIES(moon.c PROPERTIES OBJECT_DEPENDS "${BIN}/packages.h")

# Install rules.
INSTALL(TARGETS moonshine RUNTIME DESTINATION bin)
